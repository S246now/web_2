import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Table from '../components/table';
import Form from '../components/form';
import { useState } from 'react';
import { useSelector,  useDispatch } from 'react-redux';
import { deleteAction, toggleChangeAction } from '../redux/reducer';
import { eliminarUsuario, getUsuarios } from '../lib/helper';
import { useQueryClient } from 'react-query';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useEffect } from 'react';


export default function Home() {

  const router = useRouter();
/* verifica si el usuario ha iniciado sesión para acceder a esta página 
Si el usuario no ha iniciado sesión, redirige a '/auth' */
  useEffect(() => {
    const isLoggedIn = document.cookie.includes('isLoggedIn=true');
        if (!isLoggedIn) {
            router.push('/auth');
        }
  }, []);

  /* const [visible,setVisible] = useState(false) */
  const visible = useSelector((state)=>state.app.client.toggleForm)
  const deleteId = useSelector(state => state.app.client.deleteId)
  const queryClient = useQueryClient()
  const dispatch = useDispatch()
 
  const handler=()=>{ /* funciona para qeu el botón controle la visibilidad del formulario */
    /* setVisible(!visible)  *//* (visible? false:true) si es true devuelve false, caso contrario devuelve true */
    dispatch(toggleChangeAction())
  }

  const deletehandler = async ()=>{
    if (deleteId) {
      await eliminarUsuario(deleteId)
      await queryClient.prefetchQuery('usuarios', getUsuarios)
      await dispatch(deleteAction(null))
    }
  }

  const cancelhandler = async ()=>{
    console.log("Cancelado")
    await dispatch(deleteAction(null))
  }
  

  return (
    <div className={styles.container}>
      <Head>
        <title>CRUD Usuarios</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='py-5'> {/* className={styles.main} */}
        <h2 className='text-xl md:text-5xl text-center font-bold py-10'> {/*className='text-3xl font-bold underline' o ={styles.title} */}
          Usuarios
        </h2>

        <div className="container mx-auto flex justify-between py-5 border-b">
          <div className="left flex gap-3">
            <button onClick={handler} className='flex bg-indigo-500 text-white px-4 py-2 border rounded-md hover:bg-grary-50 hover:border-indigo-500 hover:text-gray-800'>
              Agregar usuario
            </button>
          </div>
          {deleteId? DeleteComponent({deletehandler,cancelhandler}):<></>}
        </div>

        {/* collapsable form */}
        {visible? <Form></Form>:<></>} {/* si visible true, mostrar, caso contrario no */}

        {/* table */}
        <div className='container mx-auto'>
          <Table></Table>
        </div>
      </main>

      <footer className={styles.footer}>
        <Link href='/auth'> Logout </Link>
      </footer>
      
    </div>
  )
}

function DeleteComponent({deletehandler,cancelhandler}){
  return(
    <div>
      <p>Eliminar?</p>
      <button onClick={deletehandler}>Sí</button>
      <button onClick={cancelhandler}>No</button>
    </div>
  )
}